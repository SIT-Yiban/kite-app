name: KiteApp

on:
  push:
  pull_request: { branches: [ master ] }

jobs:

  # flutter pub get + flutter analyze
  lint:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.0.5
          channel: stable
          cache: true

      - name: üìå Restore pub cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.pub-cache/
            .dart_tool/
            .packages
            .flutter-plugins
            .flutter-plugins-dependencies
            pubspec.lock
          key: pub-${{ github.ref }}-${{ github.sha }} # use ${{ hashFiles('pubspec.lock') }} when available
          restore-keys: |
            pub-${{ github.ref }}-
            pub-

      - name: üìå Flutter Code Generate
        run: |
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter pub run flutter_native_splash:create

      - name: üìå Cache pub
        uses: actions/cache@v2
        with:
          path: |
            ~/.pub-cache/
            .dart_tool/
            .packages
            .flutter-plugins
            .flutter-plugins-dependencies
            pubspec.lock
          key: pub-${{ github.ref }}-${{ github.sha }}

      - name: üìå Cache Workspace
        uses: actions/cache@v2
        with:
          path: |
            lib/
          key: app-${{ github.ref }}-${{ github.sha }}


  ######################
  # Android
  #
  build-Android:
    needs: lint
    runs-on: ubuntu-latest
    if: github.repository == 'SIT-kite/kite-app'
    steps:

      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.0.5
          channel: stable
          cache: true

      - name: üìå Restore pub cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.pub-cache/
            .dart_tool/
            .packages
            .flutter-plugins
            .flutter-plugins-dependencies
            pubspec.lock
          key: pub-${{ github.ref }}-${{ github.sha }}

      - name: üìå Restore Workspace
        uses: actions/cache@v2
        with:
          path: |
            lib/
          key: app-${{ github.ref }}-${{ github.sha }}

      - name: üèóÔ∏è Build Apk (arm64,android-x64)
        run: flutter build apk --split-per-abi --target-platform android-arm64,android-x64,android-arm

      - uses: r0adkll/sign-android-release@v1
        name: Sign APK
        with:
          releaseDirectory: build/app/outputs/flutter-apk
          signingKeyBase64: ${{ secrets.APK_SIGN_JKS_BASE64 }}
          alias: ${{ secrets.APK_SIGN_ALIAS }}
          keyStorePassword: ${{ secrets.APK_SIGN_PASS }}

      - name: üìå Cache Build
        uses: actions/cache@v2
        with:
          path: build/
          key: apk-${{ github.ref }}-${{ github.sha }}

  ######################
  # iOS
  #
  build-iOS:
    runs-on: macos-latest
    needs: lint
    steps:

      - uses: actions/checkout@v3

      - uses: maxim-lobanov/setup-xcode@v1
        with: { xcode-version: latest-stable }

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.0.5
          channel: stable
          cache: true

      - name: üìå Restore pub cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.pub-cache/
            .dart_tool/
            .packages
            .flutter-plugins
            .flutter-plugins-dependencies
            pubspec.lock
          key: pub-${{ github.ref }}-${{ github.sha }}

      - name: üìå Restore Workspace
        uses: actions/cache@v2
        with:
          path: |
            lib/
          key: app-${{ github.ref }}-${{ github.sha }}

      - name: üèóÔ∏è Build iOS
        run: flutter build ios --no-codesign

  build-Windows:
    runs-on: windows-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.0.5
          channel: stable
          cache: true

      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter build windows

  ######################
  # macOS
  #
  build-macOS:
    runs-on: macos-latest
    needs: lint
    env:
      MACOS_APP_RELEASE_PATH: build/macos/Build/Products/Release
    steps:
      - uses: actions/checkout@v3

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: 3.0.5
          channel: stable
          cache: true
      # Building
      - name: Build macOS
        run: |
          flutter config --enable-macos-desktop
          flutter pub get
          flutter pub run build_runner build --delete-conflicting-outputs
          flutter build macos --release
      # Signing
      - name: Codesign executable
        env:
          MACOS_CERTIFICATE: ${{ secrets.MACOS_CERTIFICATE }}
          MACOS_CERTIFICATE_PWD: ${{ secrets.MACOS_CERTIFICATE_PWD }}
        run: |
          echo $MACOS_CERTIFICATE | base64 --decode > certificate.p12
          echo "Create Keychain"
          security create-keychain -p SIT_KITE_PWD build.keychain
          echo "Assign to Login Keychain"
          security default-keychain -s build.keychain
          echo "Unlock the Login Keychain"
          security unlock-keychain -p SIT_KITE_PWD build.keychain
          echo "Import certificate"
          security import certificate.p12 -k build.keychain -P $MACOS_CERTIFICATE_PWD -T /usr/bin/codesign
          echo "Set Key Partition"
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k SIT_KITE_PWD build.keychain
          echo "Sign the app"
          /usr/bin/codesign --force --deep -s MJGX7ZZ3AG ./$MACOS_APP_RELEASE_PATH/‰∏äÂ∫îÂ∞èÈ£éÁ≠ù.app
  build-Linux:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v3
      - uses: subosito/flutter-action@v2
        with: { channel: stable, cache: true }
      - run: |
          sudo apt-get update -y
          sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - run: flutter pub get
      - run: flutter pub run build_runner build --delete-conflicting-outputs
      - run: flutter build linux

  # Upload apk
  upload:
    runs-on: ubuntu-latest
    if: |
      github.ref == 'refs/heads/master' &&
      github.repository == 'SIT-kite/kite-app'
    needs:
      - build-Android
    steps:

      - uses: nelonoel/branch-name@v1.0.1

      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with: { length: 7 }

      - name: üìå Get apk from cache
        uses: actions/cache@v2
        with:
          path: build/
          key: apk-${{ github.ref }}-${{ github.sha }}

      - name: ‚úèÔ∏è Rename apk file
        run: |
          cd build/app/outputs/flutter-apk/
          mv app-armeabi-v7a-release-signed.apk ${{ env.BRANCH_NAME }}-${{ env.SHA }}-armeabi-v7a-release-signed.apk
          mv app-arm64-v8a-release-signed.apk ${{ env.BRANCH_NAME }}-${{ env.SHA }}-arm64-v8a-release-signed.apk
          mv app-x86_64-release-signed.apk ${{ env.BRANCH_NAME }}-${{ env.SHA }}-x86_64-release-signed.apk

      - name: Copy file via SSH
        uses: appleboy/scp-action@v0.1.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SECRET }}
          source: ./build/app/outputs/flutter-apk/${{ env.BRANCH_NAME }}-${{ env.SHA }}-arm64-v8a-release-signed.apk
          target: /var/kite/web/apk/
          strip_components: 5

      - name: SSH Remote Rename apk
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.PORT }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_SECRET }}
          script: |
            rm /var/kite/web/apk/sit-kite-arm64-v8a-release-latest.apk
            mv /var/kite/web/apk/${{ env.BRANCH_NAME }}-${{ env.SHA }}-arm64-v8a-release-signed.apk /var/kite/web/apk/sit-kite-arm64-v8a-release-latest.apk

      - name: ü§ñ Upload apk by bot
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          document: build/app/outputs/flutter-apk/${{ env.BRANCH_NAME }}-${{ env.SHA }}-x86_64-release-signed.apk
          message: "üöÄ Android x86_64 Apk Build by Github Actions"

      - name: ü§ñ Upload apk by bot
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          document: build/app/outputs/flutter-apk/${{ env.BRANCH_NAME }}-${{ env.SHA }}-armeabi-v7a-release-signed.apk
          message: "üöÄ Android arm-v7a Apk Build by Github Actions"

      - name: ü§ñ Upload apk by bot
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          document: build/app/outputs/flutter-apk/${{ env.BRANCH_NAME }}-${{ env.SHA }}-arm64-v8a-release-signed.apk
          message: "üöÄ Android arm64-v8a Apk Build by Github Actions"

  # Send notification
  notification:
    runs-on: ubuntu-latest
    needs: [ upload ]
    if: |
      github.event_name != 'pull_request' &&
      github.repository == 'SIT-kite/kite-app' &&
      always()
    steps:

      - uses: technote-space/workflow-conclusion-action@v2
      - uses: nelonoel/branch-name@v1.0.1
      - uses: benjlevesque/short-sha@v1.2
        id: short-sha
        with: { length: 7 }

      - name: ü§ñ Build Success Notification
        if: env.WORKFLOW_CONCLUSION == 'success'
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            üéâ [KiteApp](https://github.com/SIT-kite/kite-app)  Build  *${{ env.WORKFLOW_CONCLUSION }}*

            Author: *${{ github.actor }}*

            Message: *${{ github.event.head_commit.message }}*

            Commit: [${{ env.SHA }}](https://github.com/${{ github.repository }}/commit/${{ env.SHA }})

            Branch: *${{ env.BRANCH_NAME }}*

      - name: ü§ñ Build Fail Notification
        if: env.WORKFLOW_CONCLUSION != 'success'
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            üî¥ [KiteApp](https://github.com/SIT-kite/kite-app)  Build  *${{ env.WORKFLOW_CONCLUSION }}*

            Author: *${{ github.actor }}*

            Message: *${{ github.event.head_commit.message }}*

            Commit: [${{ env.SHA }}](https://github.com/${{ github.repository }}/commit/${{ env.SHA }})

            Branch: *${{ env.BRANCH_NAME }}*

      - name: ü§ñ PR Merged Notification
        if: github.event.pull_request.merged == true && env.WORKFLOW_CONCLUSION == 'success'
        uses: appleboy/telegram-action@v0.1.1
        with:
          to: ${{ secrets.CHAT_ID }}
          token: ${{ secrets.BOT_TOKEN }}
          format: markdown
          message: |
            üéâ [KiteApp](https://github.com/SIT-kite/kite-app)  PR [#${{github.event.number}}](https://github.com/SIT-kite/kite-app/pull/${{github.event.number}}) Merged!

            Author: *${{ github.actor }}*

            Message: *${{ github.event.pull_request.title }}*

            Branch: *${{ env.BRANCH_NAME }}*
